campaignTrail_temp.election_json = JSON.parse("[{\"model\": \"campaign_trail.election\", \"pk\": 20, \"fields\": {\"year\": 2023, \"summary\": \"<p>Welcome to the 2023 Social Credit Test, comrade! This test was created to help you become an exemplary citizen of the People's Republic of China.</p><p>From now on, you will play as a delegate to the National People's Congress, which has the right to vote for the president of China, and learn about the right mindset to have as a Chinese. 祝你好运!</p>\", \"image_url\": \"https://raw.githubusercontent.com/FlongydOlson/OlsonMods/main/2023%20Social%20Credit/2023sc.png\", \"winning_electoral_vote_number\": 270, \"advisor_url\": \"https://raw.githubusercontent.com/FlongydOlson/OlsonMods/main/2023%20Social%20Credit/advixina.png\", \"recommended_reading\": \"\", \"has_visits\": 0, \"no_electoral_majority_image\": \"/static/images/2012-no-majority.jpg\"}}]");
campaignTrail_temp.candidate_json = JSON.parse("[{\"model\": \"campaign_trail.candidate\", \"pk\": 200, \"fields\": {\"first_name\": \"\", \"last_name\": \"Xi Jinping\", \"election\": 20, \"party\": \"Communist Party of China\", \"state\": \"Beijing\", \"priority\": 1, \"description\": \"<p>Donald Trump has shocked the political establishment by winning the Republican nomination in a divisive contest. He has taken a hard line on immigration and tax cuts, along with unorthodox positions on many other issues. He must unite his own party while finding some way to peel off potential Clinton voters -- or to blunt their enthusiasm for Clinton enough that they stay home. Will he continue the strategy of relentless attack that served him so well in the primary season?</p>\", \"color_hex\": \"#FF0000\", \"secondary_color_hex\": \"#FFA0A0\", \"is_active\": 1, \"image_url\": \"https://raw.githubusercontent.com/FlongydOlson/OlsonMods/main/2023%20Social%20Credit/xi1.png\", \"electoral_victory_message\": \"<h3>Congratulations! You have won the 2016 election.</h3><p>In spite of a hard-fought challenge from Hillary Clinton, you have shocked the world with your election victory.</p><p>On the political front, you have the bully pulpit in your favor, but support in Congress in uncertain. Will you govern as a more traditional conservative, or will you make a break from orthodoxy?</p>\", \"electoral_loss_message\": \"<h3>Sorry! You have lost the 2016 election.</h3><p>Many of your supporters are despondent that you have faltered to the likes of Hillary Clinton. Republicans in general believe this was a very winnable election, and are enraged that you came in to blow it. Luckily, there are any number of ways for you to take advantage of your newfound exposure. One rumor even has you founding a television station to profit from the aggrieved sensibilities of your followers. The future is in your hands.</p>\", \"no_electoral_majority_message\": \"<h3>Wow! You have pulled out 2016 election.</h3><p>No candidate secured a majority in the Electoral College. However, the Republicans won a majority in Congress and will elevate you to the Presidency. Time will tell how things go in that regard. Any mutual affection between you and Congress is predicted to be short-lived, but you've pulled off a number of surprises to get this far.</p>\", \"description_as_running_mate\": \"'\", \"candidate_score\": 1.0}}, {\"model\": \"campaign_trail.candidate\", \"pk\": 201, \"fields\": {\"first_name\": \"\", \"last_name\": \"Execution\", \"election\": 20, \"party\": \"Taiwan\", \"state\": \"Taiwan\", \"priority\": 2, \"description\": \"\", \"color_hex\": \"#0000FF\", \"secondary_color_hex\": \"#90C0FF\", \"is_active\": 0, \"image_url\": \"/static/images/hillary-clinton-2016.jpg\", \"electoral_victory_message\": \"\", \"electoral_loss_message\": \"\", \"no_electoral_majority_message\": \"\", \"description_as_running_mate\": \"'\", \"candidate_score\": 1.0}}, {\"model\": \"campaign_trail.candidate\", \"pk\": 204, \"fields\": {\"first_name\": \"\", \"last_name\": \"Han Zheng\", \"election\": 20, \"party\": \"Communist Party of China\", \"state\": \"Shanghai\", \"priority\": 5, \"description\": \"'\", \"color_hex\": \"#FF0000\", \"secondary_color_hex\": \"#FFA0A0\", \"is_active\": 0, \"image_url\": \"https://raw.githubusercontent.com/FlongydOlson/OlsonMods/main/2023%20Social%20Credit/han1.png\", \"electoral_victory_message\": \"'\", \"electoral_loss_message\": \"'\", \"no_electoral_majority_message\": \"'\", \"description_as_running_mate\": \"<p>Mike Pence is a former Congressman and the current Governor of Indiana. He is a popular figure among social conservatives and would help assuage concern about Trump among party insiders. He would add executive experience to the ticket and make few mistakes on the campaign trail, but he could also undercut Trump's outsider credentials.</p>\", \"candidate_score\": 0.0}}, {\"model\": \"campaign_trail.candidate\", \"pk\": 209, \"fields\": {\"first_name\": \"\", \"last_name\": \"\", \"election\": 20, \"party\": \"Taiwan\", \"state\": \"Taiwan\", \"priority\": 9, \"description\": \"'\", \"color_hex\": \"#0000FF\", \"secondary_color_hex\": \"#90C0FF\", \"is_active\": 0, \"image_url\": \"/static/images/tim-kaine-2016.jpg\", \"electoral_victory_message\": \"'\", \"electoral_loss_message\": \"'\", \"no_electoral_majority_message\": \"'\", \"description_as_running_mate\": \"\", \"candidate_score\": 0.0}}]");
campaignTrail_temp.running_mate_json = JSON.parse("[{\"model\": \"campaign_trail.running_mate\", \"pk\": 155, \"fields\": {\"candidate\": 201, \"running_mate\": 209}}, {\"model\": \"campaign_trail.running_mate\", \"pk\": 150, \"fields\": {\"candidate\": 200, \"running_mate\": 204}}]");
campaignTrail_temp.opponents_default_json = JSON.parse("[{\"election\": 20, \"candidates\": [200, 201]}]");
campaignTrail_temp.opponents_weighted_json = JSON.parse("[{\"election\": 20, \"candidates\": [200, 201]}]");        
campaignTrail_temp.difficulty_level_json = JSON.parse("[{\"model\": \"campaign_trail.difficulty_level\", \"pk\": 1, \"fields\": {\"name\": \"CENSORED\", \"multiplier\": 0.97}}, {\"model\": \"campaign_trail.difficulty_level\", \"pk\": 2, \"fields\": {\"name\": \"CENSORED\", \"multiplier\": 0.97}}, {\"model\": \"campaign_trail.difficulty_level\", \"pk\": 3, \"fields\": {\"name\": \"CENSORED\", \"multiplier\": 0.97}}, {\"model\": \"campaign_trail.difficulty_level\", \"pk\": 4, \"fields\": {\"name\": \"Normal\", \"multiplier\": 0.97}}, {\"model\": \"campaign_trail.difficulty_level\", \"pk\": 5, \"fields\": {\"name\": \"CENSORED\", \"multiplier\": 0.97}}, {\"model\": \"campaign_trail.difficulty_level\", \"pk\": 6, \"fields\": {\"name\": \"CENSORED\", \"multiplier\": 0.97}}, {\"model\": \"campaign_trail.difficulty_level\", \"pk\": 7, \"fields\": {\"name\": \"CENSORED\", \"multiplier\": 0.97}}, {\"model\": \"campaign_trail.difficulty_level\", \"pk\": 8, \"fields\": {\"name\": \"CENSORED\", \"multiplier\": 0.97}}, {\"model\": \"campaign_trail.difficulty_level\", \"pk\": 9, \"fields\": {\"name\": \"CENSORED\", \"multiplier\": 0.97}}]");
campaignTrail_temp.global_parameter_json = JSON.parse("[{\"model\": \"campaign_trail.global_parameter\", \"pk\": 1, \"fields\": {\"vote_variable\": 1.125, \"max_swing\": 0.12, \"start_point\": 0.94, \"candidate_issue_weight\": 10.0, \"running_mate_issue_weight\": 3.0, \"issue_stance_1_max\": -0.71, \"issue_stance_2_max\": -0.3, \"issue_stance_3_max\": -0.125, \"issue_stance_4_max\": 0.125, \"issue_stance_5_max\": 0.3, \"issue_stance_6_max\": 0.71, \"global_variance\": 0.01, \"state_variance\": 0.005, \"question_count\": 25, \"default_map_color_hex\": \"#C9C9C9\", \"no_state_map_color_hex\": \"#999999\"}}]");
campaignTrail_temp.candidate_dropout_json = JSON.parse("[{\"model\": \"campaign_trail.candidate_dropout\", \"pk\": 1, \"fields\": {\"candidate\": 36, \"affected_candidate\": 18, \"probability\": 1.0}}]");
campaignTrail_temp.temp_election_list = [{"id": 20, "year": 2023, "is_premium": 0, "display_year": "2023"}];
campaignTrail_temp.show_premium = true;
campaignTrail_temp.premier_ab_test_version = -1;

campaignTrail_temp.credits =  "FlongydOlson, <button onclick='credits()'>And...</button>";

var element = document.getElementById('my-invisible-element');
if(!element){
function updateCandidateForm() {
  formobserver.disconnect();
  const heading = document.querySelector("#candidate_form form h3");

  if (heading) {
    heading.textContent = "Our greatest presidential candidate:";
  }
  formobserver.observe(document.documentElement, { childList: true, subtree: true });
}
if(!formobserver){
  var formobserver = new MutationObserver(updateCandidateForm);
  formobserver.observe(document.documentElement, { childList: true, subtree: true });
}

function updateRunningMateForm() {
  runformobserver.disconnect();
  const heading = document.querySelector("#running_mate_form form h3");

  if (heading) {
    heading.textContent = "Our greatest vice-presidential candidate:";
  }
  runformobserver.observe(document.documentElement, { childList: true, subtree: true });
}
if(!runformobserver){
var runformobserver = new MutationObserver(updateRunningMateForm);
runformobserver.observe(document.documentElement, { childList: true, subtree: true });
}

function updateHeader() {
  var gameHeader = document.getElementsByClassName("game_header")[0];

  if (gameHeader.getAttribute("id") !== "modifiedHeader") {
    gameHeader.innerHTML = corrr;
    gameHeader.style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_title;
    gameHeader.setAttribute("id", "modifiedHeader");
  }
}

var headerobserver = new MutationObserver(updateHeader);
headerobserver.observe(document.documentElement, { childList: true, subtree: true });

var invisibleElement = document.createElement('div');
invisibleElement.style.display = 'none';
invisibleElement.id = 'my-invisible-element';
document.body.appendChild(invisibleElement);
}

function modifyForm() {
  try {
    const form = document.querySelector('form[name="game_type_selection"]');
    const select = form.querySelector('select[name="game_type_id"]');
    const option = select.querySelector('option[value="1"]');
    option.textContent = 'Social Credit System';
    select.querySelector('option[value="2"]').remove();
    const h3 = form.querySelector('h3');
    h3.textContent = 'The rule of this test:';
  } catch {}
}
window.setInterval(modifyForm,200)

function changeOpponentSelectionDescription() {
  try {
    const opponentSelectionDescription = document.getElementById("opponent_selection_description_window");
    opponentSelectionDescription.innerHTML = `<p><strong>Get as many Social Credits as you can!</strong></p><p>Every action you take on this test is recorded in the form of a score called 'Social Credit'. If you act in line with the Chinese government's policy, you can earn social credit, and if you choose to go against its position, you lose it. Only 100 social credits are given at the start, so please focus on testing. </p><p><font color='#FF0000'><i>Be careful: If your social credit falls below zero, it will have fatal consequences.</font></i></p>`;
  } catch {}
}
window.setInterval(changeOpponentSelectionDescription,200)

RecReading=true

credits = function() {
  credits = [""]
  text = "CODE CREDITS:\n1964 Draft Lodge (Color Setting Codes)\n2000N (Soundtrack Code)\n2025 Netherlands (Several Codes)\nNina for New Button Code\nAnd Decstar for Map Background Code\n\nHAVE FUN!"
  for (i in credits) {
      text += credits[i]
  }
  alert(text)
}

nct_stuff.themes[nct_stuff.selectedTheme].coloring_title = "#EE1C25";
nct_stuff.themes[nct_stuff.selectedTheme].coloring_window = "#EE1C25";
document.getElementsByClassName("game_header")[0].style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_title;
$("#game_window")[0].style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_window;
$(".container")[0].style.backgroundColor = "#EE1C25";
$("#game_window")[0].style.borderColor = "#FFFF00"
document.getElementById("header").src = "https://raw.githubusercontent.com/FlongydOlson/OlsonMods/main/2023%20Social%20Credit/2023banner.png"
document.body.background = "https://raw.githubusercontent.com/FlongydOlson/OlsonMods/main/2023%20Social%20Credit/2023back.png";

$(".footer a").css({"color":"#FFFFFF"});
nct_stuff.themes[nct_stuff.selectedTheme].text_col = "#FFFF00"

let style = document.createElement('style');
style.type = 'text/css';
style.id = 'dynamic-style';

style.innerHTML = `
  .campaign_trail_start_emphasis {
    background-color: #EE1C25;
  }
  a:-webkit-any-link {
  	color: #000000;
  }
`;

document.head.appendChild(style);

quotes = ["“Actions and conspiracies to divide the country are bound to fail.” - Xi Jinping"]
customquote = quotes[Math.floor((Math.random() * quotes.length))]

corrr=`\n<h2><font color='#FFFF00'>2023 SOCIAL CREDIT TEST</font></h2><font id='wittyquote' size='4' color='#FFFF00'><em>`+customquote+`</em></font>`

musicMode = () => {
    // Initialise custom music
  
    $("#music_player")[0].children[0].style.display = "none"
    $("#music_player")[0].children[1].style.display = "none"
  
    document.getElementById("modLoadReveal").style.display = "none"
    document.getElementById("modloaddiv").style.display = "none"
  
    musicBox = document.getElementById("music_player")
    musicBox.style.display = ""
  
    var trackSel;
    e = campaignTrail_temp
    e.selectedSoundtrack = 0
  
    toTime = (seconds) => {
        var date = new Date(null);
        date.setSeconds(seconds);
        return date.toISOString().substr(11, 8);
    }
  
    generateTime = () => {
        // Get the audio element
        var audio = document.getElementById("campaigntrailmusic");
  
        timeTracker = document.createElement("div");
        timeTracker.style = `
  text-align:left;
  border-style:solid;
  border-width:3px;
  height:150px;
  width:200px;
  background-color:#EE1C25;
  float:right;
  padding: 10px;
  `
        $("#trackSelParent")[0].prepend(timeTracker);
        $("#trackSelParent")[0].prepend(document.createElement("br"));
  
        // Create a new element to display the current position of the audio
        var positionDisplay = document.createElement("gg");
        positionDisplay.id = "position-display";
  
        // Create a new slider element to change the time
        var timeSlider = document.createElement("input");
        timeSlider.type = "range";
        timeSlider.min = 0;
        timeSlider.max = 1;
        timeSlider.step = 0.001;
        timeSlider.value = 0;
        timeSlider.style.width = "200px";
        timeSlider.id = "time-slider";
  
        var pausePlay = document.createElement("button");
        pausePlay.id = "position-display";
        pausePlay.innerHTML = "<b>Pause</b>"
        pausePlay.style.width = "100%";
  
  
        pausePlay.addEventListener("click", event => {
            event.preventDefault();
            updatePositionDisplay();
            let audio = document.getElementById("campaigntrailmusic");
            if (audio.paused) {
                audio.play();
                event.target.innerHTML = "<b>Pause</b>";
                return;
            }
            audio.pause();
            event.target.innerHTML = "<b>Play</b>";
            return;
        })
  
        var volumeLabel = document.createElement("gg");
        volumeLabel.id = "volume-label";
        volumeLabel.innerHTML = "<br><b>Volume: </b>"
  
        var volumeSlider = document.createElement("input");
        volumeSlider.type = "range";
        volumeSlider.min = 0;
        volumeSlider.max = 1;
        volumeSlider.step = 0.001;
        volumeSlider.value = 0;
        volumeSlider.style.width = "200px";
        volumeSlider.id = "volume-slider";
  
        volumeSlider.value = audio.volume;
  
        timeTracker.appendChild(pausePlay);
        timeTracker.appendChild(document.createElement("br"));
        timeTracker.appendChild(document.createElement("br"));
        timeTracker.appendChild(positionDisplay);
        timeTracker.appendChild(timeSlider);
        timeTracker.appendChild(volumeLabel);
        timeTracker.appendChild(volumeSlider);
  
        updatePositionDisplay();
  
        //for (let i = 0; i < 10; i++)
        //timeTracker.append(document.createElement("br"));
  
  
        // Function to update the position display
        function updatePositionDisplay() {
            positionDisplay.innerHTML = "<b>Time:</b> " + toTime(audio.currentTime) + "<br>";
            timeSlider.value = audio.duration ? audio.currentTime / audio.duration : 0;
        }
  
        // Function to change the time of the audio
        function changeTime() {
            positionDisplay.innerHTML = "<b>Time:</b> " + toTime(audio.currentTime) + "<br>";
            audio.currentTime = timeSlider.value * audio.duration;
        }
  
        updateVolume = event => {
            audio.volume = event.target.value;
        }
  
        // Update the position display and slider every second
        setInterval(updatePositionDisplay, 1000);
  
        // Listen for changes to the time slider and change the time of the audio
        timeSlider.addEventListener("input", changeTime);
        volumeSlider.addEventListener("input", updateVolume)
    }
  
    function newMusicPlayer() {
        trackSel = document.createElement("div");
        trackSel.id = "trackSelParent"
        let z = `<br><br><br><br><br><br><br><br><br><br><div id='trackSel' style="text-align:left;border-style:solid;border-width:3px;overflow-y: scroll;overflow-x: hidden;height:200px; width:400px;background-color:#EE1C25;float:right;">`
        z += `<b><select id='selectSoundtrack'><option value='` + soundtracks[e.selectedSoundtrack].name + `'>` + soundtracks[e.selectedSoundtrack].name + "</option>"
        for (i in soundtracks) {
            if (soundtracks[e.selectedSoundtrack] != soundtracks[i]) {
                z += `<option value='` + soundtracks[i].name + `'>` + soundtracks[i].name + `</option>`
            }
        }
        z += `</select></b><br><br>`
            // <label><input type="radio" name="option" value="option1">Option 1</label><br>
        for (i in soundtracks[e.selectedSoundtrack].tracklist) {
            let a = soundtracks[e.selectedSoundtrack].tracklist[i]
            let b = `<label><input class="trackSelector" type="radio" name="trackSelector" value="` + i + `">` + a.name + `</label><br>`
            z += b
        }
        z += "</div><br><br>"
        trackSel.innerHTML = z
  
        // select correct song
  
        musicBox.appendChild(trackSel);
        Array.from(document.getElementById("trackSel").children).filter(f => {
            return f.tagName == "LABEL"
        }).map(f => f.children[0])[0].checked = true
  
        // set soundtrack changer
  
        soundtrackSelector = document.getElementById("selectSoundtrack")
        soundtrackSelector.onchange = function() {
            for (i in soundtracks) {
                if (soundtracks[i].name == soundtrackSelector.value) {
                    e.selectedSoundtrack = i
                    break
                }
            }
            document.getElementById("trackSelParent").remove()
            newMusicPlayer()
        }
  
        var matches = document.querySelectorAll('.trackSelector');
  
        for (match in matches) {
            matches[match].onchange = function() {
                audio = $("#campaigntrailmusic")[0];
                audio.src = soundtracks[e.selectedSoundtrack].tracklist[this.value].url
                audio.currentTime = 0
            }
        }
  
        musicBox.children[2].loop = false
        musicBox.children[2].src = soundtracks[e.selectedSoundtrack].tracklist[0].url
  
        musicBox.children[2].onended = function() {
            console.log("next track")
            let selected = Number(document.querySelector('input[name="trackSelector"]:checked').value);
            let newSel = clamp(selected + 1, soundtracks[e.selectedSoundtrack].tracklist.length - 1, 0)
            let buttons = Array.from(document.getElementById("trackSel").children).filter(f => {
                    return f.tagName == "LABEL"
                }).map(f => f.children[0])
                //let selectedIndex = buttons.map(f=>f.children[0]).map(f=>f.checked)
            buttons[newSel].click()
        }
  
        for (w = 0; w < 7; w++) {
            document.getElementById("trackSelParent").appendChild(document.createElement("br"))
        }
  
        generateTime();
    }
  
    clamp = function(a, max, min, overflow = true) {
        if (overflow) {
            return a > max ? min : a < min ? max : a;
        }
        return a > max ? max : a < min ? min : a;
    }
  
  
    // Track list
  
    var soundtracks = {
        0: {
            name: "+15 Social Credit",
            tracklist: [
              {
                "name": "If You Feel My Love (Chaow Mix) - Blaxy Girls",
                "url": "https://raw.githubusercontent.com/FlongydOlson/OlsonMods/main/2023%20Social%20Credit/SocialCredit1.mp3"
              },
              {
                "name": "天上太阳红彤彤 - 胡彦斌",
                "url": "https://raw.githubusercontent.com/FlongydOlson/OlsonMods/main/2023%20Social%20Credit/SocialCredit2.mp3"
              },
              {
                "name": "要嫁就嫁习大大这样的人 - 胡曉明",
                "url": "https://raw.githubusercontent.com/FlongydOlson/OlsonMods/main/2023%20Social%20Credit/SocialCredit3.mp3"
              }
          ]
        },
               1: {
          name: "-30,000,000 Social Credit",
          tracklist: [
              {
                "name": "我爱北京天安门 - 金果临, 金月苓",
                "url": "https://raw.githubusercontent.com/FlongydOlson/OlsonMods/main/2023%20Social%20Credit/SocialCredit4.mp3"
              },
              {
                "name": "没有共产党才有新中国 - 新中国合唱团",
                "url": "https://raw.githubusercontent.com/FlongydOlson/OlsonMods/main/2023%20Social%20Credit/SocialCredit5.mp3"
              },
              {
                "name": "Bing Chilling Into The Night - 小潘玮xiaopanwei, John Cena",
                "url": "https://raw.githubusercontent.com/FlongydOlson/OlsonMods/main/2023%20Social%20Credit/SocialCredit6.mp3"
              }
        ]
      }
    }

  
    // Set up new music player
  
    newMusicPlayer()
  

}

  $("#game_start").click((event) => {
    event.preventDefault();
        musicMode()
  })

HistHexcolour=["#835b39","#FFD700","#C78665","#4B0080"];
        HistName=[" Park Chung-hee"," Yun Po-sun"," Oh Jae-yong"," Other Candidates"];
        HistEV=[0,0,0,0];
        HistPV=["4,702,640","4,546,614","408,664","423,280"];
        HistPVP=["46.6%","45.1%","4.1%","4.2%"];

campaignTrail_temp.modBoxTheme = {
     "header_color": "#000000",
     "header_text_color": "#835b39",
     "description_text_color": "#000000",
     "description_background_color": "#969696",
     "main_color": "#282828",
     "secondary_color": "#835b39",
     "ui_text_color": "#FFFFFF"
}
